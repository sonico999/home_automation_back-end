#include <SPI.h>
#include <Ethernet.h>
// Enter a MAC address, IP address and Portnumber for your Server below.
// The IP address will be dependent on your local network:
byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };
IPAddress serverIP(169,254,129,111);
int serverPort=8888;
int val=0;
// Initialize the Ethernet server library
// with the IP address and port you want to use
EthernetServer server(serverPort);
void setup()
{
  // start the serial for debugging
  Serial.begin(9600);
  // start the Ethernet connection and the server:
  Ethernet.begin(mac, serverIP);
  pinMode(25, OUTPUT);
  pinMode(24, OUTPUT);
  server.begin();
  Serial.println("Server started");//log
}
void loop()
{
  // listen for incoming clients
  EthernetClient client = server.available();
  if (client) {
    String clientMsg ="";
    while (client.connected()) {
      if (client.available()) {
        char c = client.read();
        
        //store the recieved chracters in a string
        clientMsg+=c;
        
        //if the character is  "\n" the message is an input/output port
        if (c == '\n') {
          Serial.println(clientMsg);
          int portNo = clientMsg.substring(0,2).toInt();
          int state = clientMsg.substring(2,3).toInt();
          if (state == 1){
          digitalWrite(portNo, HIGH);
          Serial.println("Switched on port");
          }
          else {
          digitalWrite(portNo, LOW);
          Serial.println("Switched off port");
          }
          //client.println("You said:"+clientMsg);//modify the string and send it back
          clientMsg="";
        }
        //if the character is  "\t" the message is PWM value
         if (c == '\t') {
          int portNo = clientMsg.substring(3,4).toInt();
          int pwmValue = clientMsg.substring(4,7).toInt();
          analogWrite(portNo, pwmValue);
          //client.println("You said:"+clientMsg);//modify the string and send it back
          clientMsg="";
        }
        //if the character is  "\r" the message is an analog read port
        if (c == '\r') {
          int portNo = clientMsg.substring(3,4).toInt();
          Serial.println(portNo,DEC);
           val = analogRead(portNo);
          Serial.println(val);
          client.println(val);//modify the string and send it back
          clientMsg="";
        }
      }
    }
    // give the Client time to receive the data
    delay(1);
    // close the connection:
    client.stop();
  }
}
